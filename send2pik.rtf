{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red88\green118\blue71;\red117\green114\blue185;\red109\green109\blue109;\red254\green187\blue91;\red86\green132\blue173;
\red152\green54\blue29;}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c45882\c44706\c72549;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c33725\c51765\c67843;
\csgenericrgb\c59608\c21176\c11373;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 import \cf4 streamlit \cf2 as \cf4 st\
\cf2 import \cf4 pickle\
\cf2 import \cf4 pandas \cf2 as \cf4 pd\
\
st.title(\cf5 'movie recommendation system'\cf4 )\
\
movies_dict = pickle.load(\cf6 open\cf4 (\cf5 'movies_dict.pkl'\cf2 , \cf5 'rb'\cf4 ))\
movies = pd.DataFrame(movies_dict)\
\
similarity = pickle.load(\cf6 open\cf4 (\cf5 'sim_matrix.pkl'\cf2 , \cf5 'rb'\cf4 ))\
\
\cf7 #main function below:\
\cf2 def \cf8 recommend\cf4 (selected_movie):\
    movie_index = movies[movies[\cf5 'title'\cf4 ] == selected_movie].index[\cf9 0\cf4 ]\
    distances = similarity[movie_index]\
    movie_list = \cf6 sorted\cf4 (\cf6 list\cf4 (\cf6 enumerate\cf4 (distances))\cf2 , \cf10 reverse\cf4 =\cf2 True, \cf10 key\cf4 =\cf2 lambda \cf4 x: x[\cf9 1\cf4 ])[\cf9 1\cf4 :\cf9 10\cf4 ]\
\
    recommended_movies =[]\
    \cf2 for \cf4 i \cf2 in \cf4 movie_list:\
        \cf7 # print(i[0])\
        \cf4 recommended_movies.append(movies.iloc[i[\cf9 0\cf4 ]].title)\
    \cf2 return \cf4 recommended_movies\
\
\
\
\
selected_movie = st.selectbox(\
\cf5 'please select a movie '\cf2 ,\
\cf4 movies[\cf5 'title'\cf4 ].values)\
\
comparison_in_end =[]\
emptylisterror = \cf9 0\
\
\cf2 if \cf4 st.button(\cf5 'Recommend'\cf4 ):\
    final_output = recommend(selected_movie)\
    emptylisterror = \cf9 1\
    \cf2 for \cf4 x \cf2 in \cf4 final_output:\
        comparison_in_end.append(x)\
        st.write(x)\
\
\cf7 #for comparison of description\
\
\cf4 comp = pickle.load(\cf6 open\cf4 (\cf5 'comp.pkl'\cf2 , \cf5 'rb'\cf4 ))\
comparison= pd.DataFrame(comp)\
\
st.write(\cf5 '-----------------------'\cf4 )\
st.subheader(\cf5 'compare movie descriptions'\cf4 )\
\
\
\
\cf7 #with col2:\
  #  st.caption("A dog")\
  #  check2 = st.selectbox(\
    #    'please select a movie from recommendations',\
     #   comparison_in_end)\
    #comparison.loc[comparison['title'] == check2, 'description'].iloc[0]\
\
\cf2 with \cf4 st.expander(\cf5 "Movie description of " \cf4 + selected_movie):\
    description1 = comparison.loc[comparison[\cf5 'title'\cf4 ] == selected_movie\cf2 , \cf5 'description'\cf4 ].iloc[\cf9 0\cf4 ]\
    st.write(description1)\
\
\cf2 if \cf4 emptylisterror==\cf9 1\cf4 :\
    \cf2 with \cf4 st.expander(\cf5 "Movie description of " \cf4 + comparison_in_end[\cf9 0\cf4 ] ):\
        st.subheader(comparison_in_end[\cf9 0\cf4 ])\
        description2 = comparison.loc[comparison[\cf5 'title'\cf4 ] == comparison_in_end[\cf9 0\cf4 ]\cf2 , \cf5 'description'\cf4 ].iloc[\cf9 0\cf4 ]\
        st.write(description2)\
    \cf2 with \cf4 st.expander(\cf5 "Movie description of " \cf4 + comparison_in_end[\cf9 1\cf4 ] ):\
        st.subheader(comparison_in_end[\cf9 1\cf4 ])\
        description3 = comparison.loc[comparison[\cf5 'title'\cf4 ] == comparison_in_end[\cf9 1\cf4 ]\cf2 , \cf5 'description'\cf4 ].iloc[\cf9 0\cf4 ]\
        st.write(description3)\
\
    \cf2 with \cf4 st.expander(\cf5 "Movie description of " \cf4 + comparison_in_end[\cf9 2\cf4 ] ):\
        st.subheader(comparison_in_end[\cf9 2\cf4 ])\
        description4 = comparison.loc[comparison[\cf5 'title'\cf4 ] == comparison_in_end[\cf9 2\cf4 ]\cf2 , \cf5 'description'\cf4 ].iloc[\cf9 0\cf4 ]\
        st.write(description4)\
\
}